<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevExpress.Xpf.Diagram.v16.1</name>
    </assembly>
    <members>
        <member name="T:DevExpress.Xpf.Diagram.DiagramDesignerControl">

            <summary>
                <para>The Diagram Designer control.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramDesignerControl.#ctor">
            <summary>
                <para>Initializes a new instance of the DiagramDesignerControl class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.Actions">
            <summary>
                <para>Provides access to the collection of actions provided by the diagram designer ribbon.
</para>
            </summary>
            <value>The collection of actions.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName(System.Windows.DependencyObject)">
            <summary>
                <para>Specifies the name of the bar item associated with an object. This is an attached property.
</para>
            </summary>
            <value>A string value that specifies the name of the bar item associated with an object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemNameProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramDesignerControl.GetBarItemName(System.Windows.DependencyObject)">
            <summary>
                <para>Gets the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName"/> attached property from a given object.
</para>
            </summary>
            <param name="d">
		An object whose <see cref="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName"/> property's value is to be returned.

            </param>
            <returns>A string value that specifies the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName"/> attached property for the specified object.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramDesignerControl.OnApplyTemplate">
            <summary>
                <para>Called after the template is completely generated and attached to the visual tree.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.PageOrientation">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramDesignerControl.SetBarItemName(System.Windows.DependencyObject,System.String)">
            <summary>
                <para>Sets the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName"/> attached property for a given object. 
</para>
            </summary>
            <param name="obj">
		An object for which the <see cref="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName"/> attached property is set.

            </param>
            <param name="value">
		A string value that specifies the value to be assigned to the <see cref="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.BarItemName"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.TextHorizontalAlignment">
            <summary>
                <para> 
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramDesignerControl.TextVerticalAlignment">
            <summary>
                <para> 
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="T:DevExpress.Xpf.Diagram.DiagramItem">

            <summary>
                <para>The base class for diagram items.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Anchors">
            <summary>
                <para>Gets or sets the sides of the root item (page) to which the current DiagramItem object is anchored. This is a dependency property.
</para>
            </summary>
            <value>The sides of the root item (page) to which the diagram item is anchored.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.AnchorsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Angle">
            <summary>
                <para>Specifies the angle by which the diagram item is rotated around its anchor point. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value specifying an angle in degrees.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.AngleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Background">
            <summary>
                <para>Gets or sets the brush used to paint the diagram item background.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> object, that specifies how the diagram item background is painted. 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.BackgroundId">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.BackgroundIdProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanCopy">
            <summary>
                <para>Specifies whether the diagram item can be copied to clipboard by end-users. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to copy the diagram item to clipboard; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanCopyProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanDelete">
            <summary>
                <para>Specifies whether the diagram item can be removed by end-users. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to remove the diagram item; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanDeleteProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanMove">
            <summary>
                <para>Specifies whether the diagram item can be moved by end-users. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to move the diagram item; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanMoveProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanResize">
            <summary>
                <para>Specifies whether the diagram item can be resized by end-users. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to resize the diagram item; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanResizeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanRotate">
            <summary>
                <para>Specifies whether the diagram item can be rotated by end-users. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to allow end-users to rotate the diagram item; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanRotateProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanSelect">
            <summary>
                <para>Gets or sets whether the diagram item can be selected on the diagram canvas. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> if the diagram item can be selected on the diagram canvas; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanSelectProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanSnapToOtherItems">
            <summary>
                <para>Gets or sets whether the item can snap to alignment guides (snap lines) of other items during item movement and resizing operations in the Diagram Designer Control. This is a dependency property
</para>
            </summary>
            <value><b>true</b>, if the item takes into account the snap lines of other items; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanSnapToOtherItemsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CanSnapToThisItem">
            <summary>
                <para>Gets or sets whether other items can snap to the alignment guides (snap lines) of the current item during movement and resizing operations in the Diagram Designer Control.
</para>
            </summary>
            <value><b>true</b>, if other items take into account the snap lines of the current item; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CanSnapToThisItemProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.ConnectionPoints">
            <summary>
                <para>Specifies the list of points on the perimeter of a shape at which connectors can terminate. This is a dependency property.
</para>
            </summary>
            <value>A list of points on the perimeter of a shape at which connectors can terminate.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.ConnectionPointsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.Controller">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.CustomStyleId">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.CustomStyleIdProperty">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Foreground">
            <summary>
                <para>Gets or sets the brush used to paint the diagram item foreground.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> object, that specifies how the diagram item background is painted.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.ForegroundId">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.ForegroundIdProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramItem.GetDiagram">
            <summary>
                <para>Gets the diagram control that is the owner of the diagram item.
</para>
            </summary>
            <returns>A <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> object that is the owner of the DiagramItem.
</returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.IsSelected">
            <summary>
                <para>Gets whether the diagram item is selected. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> if the diagram item is selected; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.IsSelectedProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Position">
            <summary>
                <para>Gets or sets the coordinates of the item's upper left corner. This is a dependency property.
</para>
            </summary>
            <value>The coordinates of the item's upper left corner.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.PositionProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.SelectionLayer">
            <summary>
                <para>This item supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.SelectionLayerProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramItem.SetFontSize(System.Double,System.Drawing.GraphicsUnit)">
            <summary>
                <para>Specifies the font size for the text within the diagram item.
</para>
            </summary>
            <param name="value">
		The value.

            </param>
            <param name="unit">
		The unit of measure.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Stroke">
            <summary>
                <para>Gets or sets the brush used to paint the diagram item outline. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> object, that specifies how the diagram item outline is painted. 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.StrokeDashArray">
            <summary>
                <para>Gets or sets a collection of System.Double values that indicate the pattern of dashes and gaps that is used to outline diagram items. This is a dependency property.
</para>
            </summary>
            <value>A collection of System.Double values that specify the pattern of dashes and gaps.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.StrokeDashArrayProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.StrokeId">
            <summary>
                <para>This member supports the internal infrastructure, and is not intended to be used directly from your code.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.StrokeIdProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.StrokeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.StrokeThickness">
            <summary>
                <para>Gets or sets the width of the diagram item outline. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="Double"/> value that specifies the width, in pixels, of the diagram item outline.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.StrokeThicknessProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.TextAlignment">
            <summary>
                <para>Specifies the alignment of the text within the diagram item. This is a dependency property.
</para>
            </summary>
            <value>A System.Windows.TextAlignment enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.TextAlignmentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.TextDecorations">
            <summary>
                <para>Gets or sets a collection of decorations applied to the text within the diagram item. This is a dependency property.
</para>
            </summary>
            <value>A System.Windows.TextDecorationCollection instance.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.TextDecorationsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.ThemeStyleId">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.ThemeStyleIdProperty">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramItem.ToString">
            <summary>
                <para>Returns the textual representation of the DiagramItem.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value which is the textual representation of the DiagramItem.
</returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramItem.Weight">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramItem.WeightProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="T:DevExpress.Xpf.Diagram.DiagramControl">

            <summary>
                <para>The diagram control.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.#ctor">
            <summary>
                <para>Initializes a new instance of the DiagramControl class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ActiveTool">
            <summary>
                <para>Specifies the currently selected diagram tool. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTool"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ActiveToolProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.AddingNewItem">
            <summary>
                <para>Fires each time a new item is added to the diagram.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AddingNewItemEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowDiagramProperties">
            <summary>
                <para>Specifies whether to display the 'Properties' menu item in the context menu. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to display the 'Properties' menu item in the context menu; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowDiagramPropertiesProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowEmptySelection">
            <summary>
                <para>Specifies whether to allow selecting the root item. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, to allow selecting the root item ; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowEmptySelectionProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.AllowPropertiesPanel">
            <summary>
                <para>Specifies whether to display the 'Properties' menu item in the context menu. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to display the 'Properties' menu item in the context menu; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.AllowPropertiesPanelProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplySugiyamaLayout(DevExpress.Diagram.Core.Layout.SugiyamaLayoutSettings)">
            <summary>
                <para>Realigns diagram items according to the layered graph drawing (Sugiyama-style graph drawing) algorithm.
</para>
            </summary>
            <param name="settings">
		A DevExpress.Diagram.Core.Layout.SugiyamaLayoutSettings object.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplySugiyamaLayout(DevExpress.Diagram.Core.Direction)">
            <summary>
                <para>Realigns diagram items according to the layered graph drawing (Sugiyama-style graph drawing) algorithm.
</para>
            </summary>
            <param name="direction">
		A <see cref="T:DevExpress.Diagram.Core.Direction"/> enumeration value.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTreeLayout(DevExpress.Diagram.Core.Direction)">
            <summary>
                <para>Realigns diagram items to form a tree diagram.
</para>
            </summary>
            <param name="direction">
		A <see cref="T:DevExpress.Diagram.Core.Direction"/> enumeration value.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ApplyTreeLayout(DevExpress.Diagram.Core.Layout.TreeLayoutSettings,DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode)">
            <summary>
                <para>Realigns diagram items to form a tree diagram.
</para>
            </summary>
            <param name="settings">
		A DevExpress.Diagram.Core.Layout.TreeLayoutSettings object.

            </param>
            <param name="splitMode">
		A <see cref="T:DevExpress.Diagram.Core.Layout.SplitToConnectedComponentsMode"/> enumeration value that specifies which diagram items are realigned.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BeginInit">
            <summary>
                <para>Starts the runtime initialization. 
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.BringIntoViewMargin">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.BringIntoViewMarginProperty">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BringItemsForward(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Brings the specified diagram items forward one step in the stack.
</para>
            </summary>
            <param name="items">
		The diagram items to be brought forward one step in the stack.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BringItemsIntoView(System.Collections.Generic.IEnumerable`1,DevExpress.Diagram.Core.BringIntoViewMode)">
            <summary>
                <para>Scrolls the diagram and changes its zoom factor to bring the specified diagram items into view.
</para>
            </summary>
            <param name="items">
		The diagram items to be brought into view.

            </param>
            <param name="viewMode">
		A <see cref="T:DevExpress.Diagram.Core.BringIntoViewMode"/> enumeration value that specifies whether all items should be brought into view when other items are partially visible.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BringItemsToFront(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Brings the specified diagram items to the front of the stack.
</para>
            </summary>
            <param name="items">
		The diagram items to be brought to the front of the stack.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BringSelectedItemsForward">
            <summary>
                <para>Brings the selected diagram items forward one step in the stack.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BringSelectedItemsToFront">
            <summary>
                <para>Brings the specified diagram items to the front of the stack.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.BringSelectionIntoView(DevExpress.Diagram.Core.BringIntoViewMode)">
            <summary>
                <para>Scrolls the diagram and changes its zoom factor to bring the selected diagram items into view.
</para>
            </summary>
            <param name="viewMode">
		A <see cref="T:DevExpress.Diagram.Core.BringIntoViewMode"/> enumeration value that specifies whether all items should be brought into view when other items are partially visible.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CalcHitInfo(System.Func`2)">
            <summary>
                <para> </para>
            </summary>
            <param name="getPosition">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CalcHitInfo(System.Windows.Point)">
            <summary>
                <para>Returns information on an object located at the specified position.
</para>
            </summary>
            <param name="diagramRelativePoint">
		A test point where a target element is located.

            </param>
            <returns>A DiagramHitInfo descendant that contains information on an object located at the specified position.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CalcHitItem(System.Windows.Point)">
            <summary>
                <para>Returns the diagram item located at the specified position.
</para>
            </summary>
            <param name="diagramRelativePoint">
		A test point where a target element is located.

            </param>
            <returns>A diagram item located at the specified position.
</returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CalcHitItem(System.Func`2)">
            <summary>
                <para> </para>
            </summary>
            <param name="getPosition">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.CanRedo">
            <summary>
                <para>Indicates whether there are actions that occurred recently within the control that can be reapplied. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> if there are operations that have been undone that can be reapplied; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CanRedoProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.CanUndo">
            <summary>
                <para>Indicates whether the user can undo the previous operation. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> if the user can undo the previous opration; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CanUndoProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.CanvasSizeMode">
            <summary>
                <para>Specifies whether the Canvas size is automatically changed to fit the current shapes layout. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.CanvasSizeMode"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CanvasSizeModeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ClearSelection">
            <summary>
                <para>Unselects any selected shapes and connectors.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ClosedEditor">
            <summary>
                <para>Fires after the end-user closes the diagram item's text editor.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ClosedEditorEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.Commands">
            <summary>
                <para>Provides access to diagram commands.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramCommands"/> object that provides a set of diagram commands.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.Controller">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CopySelectedItems">
            <summary>
                <para>Copies the currently selected diagram items to the clipboard.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CreateAdorner(System.Windows.FrameworkElement)">
            <summary>
                <para> </para>
            </summary>
            <param name="element">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CreateAdornerEx``2(``0)">
            <summary>
                <para> </para>
            </summary>
            <param name="control">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CreateBackgroundAdorner(System.Windows.FrameworkElement)">
            <summary>
                <para> </para>
            </summary>
            <param name="element">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CreateHRulerAdorner(System.Windows.FrameworkElement)">
            <summary>
                <para> </para>
            </summary>
            <param name="element">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CreateVRulerAdorner(System.Windows.FrameworkElement)">
            <summary>
                <para> </para>
            </summary>
            <param name="element">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomLoadDocument">
            <summary>
                <para>Fires after an end-user selects a document in the 'Open File' dialog or a document is loaded by setting the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.DocumentSource"/> property in code.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CustomLoadDocumentEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.CustomSaveDocument">
            <summary>
                <para>Fires before saving the diagram to a file.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.CustomSaveDocumentEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.CutSelectedItems">
            <summary>
                <para>Moves the currently selected diagram items to the clipboard.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.DeleteItems(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Removes the specified diagram items.
</para>
            </summary>
            <param name="items">
		The diagram items to be removed.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.DeleteSelectedItems">
            <summary>
                <para>Removes the currently selected diagram items.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.DeletingItems">
            <summary>
                <para>Fires when the end-user removes items from the diagram canvas.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.DeletingItemsEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram(System.Windows.DependencyObject)">
            <summary>
                <para>Specifies the diagram control associated with an object. This is an attached property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> value that specifies the diagram control associated with an object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.DiagramProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.DocumentLoaded">
            <summary>
                <para>Occurs after a document is loaded into the <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/>.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.DocumentLoadedEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.DocumentSource">
            <summary>
                <para>Specifies a document supplier for the DiagramControl. This is a dependency property.
</para>
            </summary>
            <value>An object that contains data for the DiagramControl.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.DocumentSourceProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.EndInit">
            <summary>
                <para>Ends the runtime initialization.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ExceptionMessage">
            <summary>
                <para>Enables you to manually handle the file loading exception.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ExceptionMessageEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportDiagram(System.String)">
            <summary>
                <para>Exports the diagram in the specified format to a file.
</para>
            </summary>
            <param name="path">
		A string value that is the path to the file to which to save the diagram.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportDiagram(DevExpress.Diagram.Core.DiagramExportFormat)">
            <summary>
                <para>Invokes the <b>Export</b> dialog window.
</para>
            </summary>
            <param name="exportFormat">
		A DevExpress.Diagram.Core.DiagramExportFormat enumeration value that is the file format which is selected in the dialog window by default.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ExportDiagram(System.IO.Stream,DevExpress.Diagram.Core.DiagramExportFormat)">
            <summary>
                <para>Exports the diagram in the specified format to a stream.
</para>
            </summary>
            <param name="stream">
		A stream to which to export the diagram.

            </param>
            <param name="exportFormat">
		A DevExpress.Diagram.Core.DiagramExportFormat enumeration value.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.FileDialogFilter">
            <summary>
                <para>Gets or sets the filter string that determines which files are displayed in the 'Open File' and 'Save File As' dialog boxes. This is a dependency property.
</para>
            </summary>
            <value>A filter string that determines which files are displayed in the file dialog box.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.FileDialogFilterProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.FitToDrawing">
            <summary>
                <para>Changes the page size to fit the diagram contents.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.FitToDrawingMargin">
            <summary>
                <para>Gets or sets the margin between diagram contents and page bounds when calling the <see cref="M:DevExpress.Xpf.Diagram.DiagramControl.FitToDrawing"/> and <see cref="M:DevExpress.Xpf.Diagram.DiagramControl.FitToItems"/> methods.
. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Thickness"/> value that represents the margin between diagram contents and page bounds.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.FitToDrawingMarginProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.FitToItems(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Scrolls the diagram and changes its zoom factor so that the viewport is sufficiently large to display the specified items.
</para>
            </summary>
            <param name="items">
		The diagram items to fit within the viewport.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.FitToPage">
            <summary>
                <para>Sets the diagram zoom factor value to fit the entire page size within the canvas.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.FitToWidth">
            <summary>
                <para>Sets the diagram zoom factor value to fit the entire diagram width.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.GetDiagram(System.Windows.DependencyObject)">
            <summary>
                <para>Gets the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram"/> attached property from a given object.
</para>
            </summary>
            <param name="d">
		An object whose <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram"/> property's value is to be returned.

            </param>
            <returns>A <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> value that specifies the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram"/> attached property for the specified object.
</returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.GlueToConnectionPointDistance">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.GlueToConnectionPointDistanceProperty">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.GlueToItemDistance">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.GlueToItemDistanceProperty">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.GridSize">
            <summary>
                <para>Gets or sets the size of a grid's cell. This is a dependency property.
</para>
            </summary>
            <value>The size of a grid's cell.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.GridSizeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.HasChanges">
            <summary>
                <para>Gets whether the current document has unsaved changes. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, if the document has unsaved changes; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.HasChangesProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.IsTextEditMode">
            <summary>
                <para>Gets whether a diagram item's text is currently being edited. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, if a diagram item's text is currently being edited; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.IsTextEditModeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ItemContentChanged">
            <summary>
                <para>Fires each time an item's text is changed.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ItemContentChangedEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ItemInitializing">
            <summary>
                <para>Fires each time an item is created via the DevExpress.Diagram.Core.ItemTool.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ItemInitializingEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.Items">
            <summary>
                <para>Provides access to the collection of diagram items displayed by the DiagramControl.
</para>
            </summary>
            <value>The collection of diagram items.
</value>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ItemsChanged">
            <summary>
                <para>Fires each time an item is added or removed from the diagram.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ItemsChangedEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ItemTypeRegistrator">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.LastShapeStyles">
            <summary>
                <para>Provides access to the collection of the recently used shapes. This is a dependency property.
</para>
            </summary>
            <value>A read-only collection of the recently used shapes.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.LastShapeStylesProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.LineJumpPlacement">
            <summary>
                <para>Specifies which connector lines display jumps in intersections. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.LineJumpPlacement"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.LineJumpPlacementProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.LineJumpSize">
            <summary>
                <para>Gets or sets the size of line jumps. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Size"/> value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.LineJumpSizeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.LineJumpStyle">
            <summary>
                <para>Gets or sets the line jump style for connectors. This is a dependency property.
</para>
            </summary>
            <value>A DevExpress.Diagram.Core.LineJumpDescription object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.LineJumpStyleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.LoadDocument(System.IO.Stream)">
            <summary>
                <para>Loads a diagram document from a stream.
</para>
            </summary>
            <param name="stream">
		The stream from which to load a diagram document.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.LoadDocument(System.String)">
            <summary>
                <para>Loads a diagram from the specified file.
</para>
            </summary>
            <param name="fileName">
		A string specifying the path of the file containing a diagram.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MeasureUnit">
            <summary>
                <para>Specifies the unit of measure used for sizes and coordinates of diagram elements. This is a dependency property.
</para>
            </summary>
            <value>A unit of measure.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MeasureUnitProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.MinDragDistance">
            <summary>
                <para>Specifies the number of pixels the cursor must move with the mouse down before dragging begins. This is a dependency property.

</para>
            </summary>
            <value>A System.Double value that is the number of pixels the cursor must move with the mouse down before dragging begins.

</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.MinDragDistanceProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.NewDocument">
            <summary>
                <para>Discards the current document and creates a new one.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.NewFile">
            <summary>
                <para>Closes the current file and creates a new one.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.OnApplyTemplate">
            <summary>
                <para>Called after the template is completely generated and attached to the visual tree.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.OpenFile">
            <summary>
                <para>Displays the "Open File" dialog that allows an end-user to load an XML file containing a saved diagram.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PageMargin">
            <summary>
                <para>Gets or sets the amount of space between the page's borders and its contents. This is a dependency property.
</para>
            </summary>
            <value>Gets or sets the amount of space between the page's borders and its contents.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PageMarginProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PageSize">
            <summary>
                <para>Gets or sets the initial diagram canvas size (the tile size). This is a dependency property.
</para>
            </summary>
            <value>A System.Windows.Size object representing the tile size in pixels.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PageSizeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.Paste">
            <summary>
                <para>Inserts the diagram items from the clipboard onto the Canvas.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PlatformCache">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.PointToControl(System.Windows.Point)">
            <summary>
                <para> </para>
            </summary>
            <param name="documentPoint">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.PointToDocument(System.Windows.Point)">
            <summary>
                <para> </para>
            </summary>
            <param name="controlPoint">
		 
            </param>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PrimarySelection">
            <summary>
                <para>Gets the object that is currently the primary selected diagram item.
This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PrimarySelectionProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.Print">
            <summary>
                <para>Invokes the <b>Print</b> dialog window.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.PropertiesPanelVisibility">
            <summary>
                <para>Gets or sets the Properties Panel display mode. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.PropertiesPanelVisibility"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.PropertiesPanelVisibilityProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.QuickPrint">
            <summary>
                <para>Prints the current diagram to the default printer.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ResizingMode">
            <summary>
                <para>Gets or sets how diagram items are resized. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.ResizingMode"/> enumeration value that specifies how diagram items are resized.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ResizingModeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.RootToolsModel">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.RootToolsModelProperty">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SaveDocument(System.IO.Stream)">
            <summary>
                <para>Saves the current diagram document to a stream.
</para>
            </summary>
            <param name="stream">
		A stream to which to save the diagram document.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SaveDocument(System.String)">
            <summary>
                <para>Saves the current diagram to the specified file.
</para>
            </summary>
            <param name="fileName">
		A string specifying the path of the file to which to save the diagram.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SaveFile">
            <summary>
                <para>Saves the diagram to a file.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SaveFileAs">
            <summary>
                <para>Invokes the <b>Save File As</b> dialog window that allows the end-user to select the name and destination of the file to which to save the current diagram.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ScrollMargin">
            <summary>
                <para>Gets or sets the outer indents of the diagram. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Thickness"/> value that contains the outer indents of the diagram.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ScrollMarginProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SelectAll">
            <summary>
                <para>Selects all shapes and connectors within the current document.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SelectedItems">
            <summary>
                <para>Provides access to the collection of the currently selected diagram items.
</para>
            </summary>
            <value>A read-only collection of the currently selected diagram items.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SelectedStencils">
            <summary>
                <para>Specifies the selected shape groups. This is a dependency property.
</para>
            </summary>
            <value>A DevExpress.Diagram.Core.StencilCollection object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SelectedStencilsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.SelectionChanged">
            <summary>
                <para>Occurs after the selection has been changed.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SelectionChangedEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SelectionModel">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SelectionModelProperty">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SelectionToolsModel">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SelectionToolsModelProperty">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SelectItem(DevExpress.Xpf.Diagram.DiagramItem,DevExpress.Diagram.Core.ModifySelectionMode)">
            <summary>
                <para>Selects the specified diagram item.
</para>
            </summary>
            <param name="item">
		A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> object that is the item to select.

            </param>
            <param name="modifySelectionMode">
		A <see cref="T:DevExpress.Diagram.Core.ModifySelectionMode"/> enumeration value that specifies whether to add or replace the existing selection with the specified diagram item. 

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SelectItems(System.Collections.Generic.IEnumerable`1,DevExpress.Diagram.Core.ModifySelectionMode)">
            <summary>
                <para>Selects the specified diagram items.
</para>
            </summary>
            <param name="items">
		An array of <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> objects representing the diagram items to select.

            </param>
            <param name="modifySelectionMode">
		A <see cref="T:DevExpress.Diagram.Core.ModifySelectionMode"/> enumeration value that specifies whether to add or replace the existing selection with the specified diagram items. 

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SelectItems(DevExpress.Xpf.Diagram.DiagramItem[])">
            <summary>
                <para>Selects the specified diagram items.
</para>
            </summary>
            <param name="items">
		A list of <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> objects representing the diagram items to select.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SelectPartiallyCoveredItems">
            <summary>
                <para>Specifies whether to select items that are only partially covered with the selection rectangle. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, to select items that are only partially covered with the selection rectangle; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SelectPartiallyCoveredItemsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SendItemsBackward(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Sends the specified diagram items back one step in the stack.
</para>
            </summary>
            <param name="items">
		The diagram items to be sent back one step in the stack.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SendItemsToBack(System.Collections.Generic.IEnumerable`1)">
            <summary>
                <para>Sends the specified diagram items to the back of the stack.
</para>
            </summary>
            <param name="items">
		The diagram items to be sent to the back of the stack.

            </param>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SendSelectedItemsBackward">
            <summary>
                <para>Sends the selected diagram items back one step in the stack.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SendSelectedItemsToBack">
            <summary>
                <para>Sends the specified diagram items to the back of the stack.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.SetDiagram(System.Windows.DependencyObject,DevExpress.Xpf.Diagram.DiagramControl)">
            <summary>
                <para>Sets the value of the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram"/> attached property for a given object. 
</para>
            </summary>
            <param name="obj">
		An object for which the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram"/> attached property is set.

            </param>
            <param name="value">
		A <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/> value that specifies the value to be assigned to the <see cref="P:DevExpress.Xpf.Diagram.DiagramControl.Diagram"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ShowGrid">
            <summary>
                <para>Specifies whether to display grid lines on the Canvas. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to display grid lines on the canvas; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowGridProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ShowingEditor">
            <summary>
                <para>Enables you to prevent an end-user from activating the editors of individual diagram items.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowingEditorEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ShowingOpenDialog">
            <summary>
                <para>Fires before showing an 'Open File' dialog, and allows it to be customized.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowingOpenDialogEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="E:DevExpress.Xpf.Diagram.DiagramControl.ShowingSaveDialog">
            <summary>
                <para>Fires before showing a 'Save File As' dialog, and allows it to be customized.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowingSaveDialogEvent">
            <summary>
                <para>Identifies the  routed event.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ShowPageBreaks">
            <summary>
                <para>Gets or sets whether to display page breaks. This is a dependency property.
</para>
            </summary>
            <value><b>true</b>, to display page breaks; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowPageBreaksProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ShowRulers">
            <summary>
                <para>Specifies whether to display rulers on the Canvas. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> if rulers are displayed on the canvas; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowRulersProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ShowSelectionRectangle">
            <summary>
                <para>Gets or sets whether to show the selection rectangle. This is a dependency property.
</para>
            </summary>
            <value><b>true</b> to show the selection rectangle; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ShowSelectionRectangleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SnapToGrid">
            <summary>
                <para>Specifies whether to pull shapes to the grid lines whenever an end-user drags them around the Canvas. This is a dependency property.

</para>
            </summary>
            <value><b>true</b>, to snap shapes to the grid lines; otherwise, <b>false</b>.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SnapToGridProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SnapToItems">
            <summary>
                <para>Specifies whether to pull shapes to other shapes whenever an end-user drags them around the Canvas. This is a dependency property.

</para>
            </summary>
            <value><b>true</b> to snap shapes to other shapes; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.SnapToItemsDistance">
            <summary>
                <para>Specifies the minimum distance between alignment guides of a shape being dragged and another shape's alignment guides at which the "snap-to-items" feature is activated. If the dragged shape is dropped at this position, it will be aligned with the second shape. This is a dependency property.
</para>
            </summary>
            <value>The snap distance in pixels.

</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SnapToItemsDistanceProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.SnapToItemsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.Theme">
            <summary>
                <para>Provides access to the current theme. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.DiagramTheme"/> object.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ThemeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.Title">
            <summary>
                <para>The document title to which the window title can be bound. This is a dependency property.
</para>
            </summary>
            <value>A string object that represents the document title.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.TitleProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ToolboxVisibility">
            <summary>
                <para>Gets or sets the Shapes Panel display mode. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Diagram.Core.ToolboxVisibility"/> enumeration value.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ToolboxVisibilityProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.UndoManager">
            <summary>
                <para>Provides access to an object that manages the undo and redo operations in the <see cref="T:DevExpress.Xpf.Diagram.DiagramControl"/>.
</para>
            </summary>
            <value>A DevExpress.Utils.UndoManager object.
</value>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.UnselectItem(DevExpress.Xpf.Diagram.DiagramItem)">
            <summary>
                <para>Unselects the specified diagram item.
</para>
            </summary>
            <param name="item">
		A <see cref="T:DevExpress.Xpf.Diagram.DiagramItem"/> to unselect.

            </param>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramControl.ZoomFactor">
            <summary>
                <para>Specifies the diagram zoom factor. This is a dependency property. 
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value specifying the document zoom factor.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramControl.ZoomFactorProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ZoomIn">
            <summary>
                <para>Increases the document zoom factor.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramControl.ZoomOut">
            <summary>
                <para>Decreases the document zoom factor.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Xpf.Diagram.DiagramConnector">

            <summary>
                <para>Connects two diagram items or two points.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramConnector.#ctor">
            <summary>
                <para>Initializes a new instance of the DiagramConnector class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Anchors">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Angle">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginArrow">
            <summary>
                <para>Gets or sets the connector's start arrow style. This is a dependency property.
</para>
            </summary>
            <value>An object that specifies the start arrow style.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginArrowProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginArrowSize">
            <summary>
                <para>Gets or sets the connector's starting arrow size. This is a dependency property.
</para>
            </summary>
            <value>The starting arrow size.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginArrowSizeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginItem">
            <summary>
                <para>Gets or sets the start item for the connector. This is a dependency property.
</para>
            </summary>
            <value>The connector's start item.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginItemPointIndex">
            <summary>
                <para>Gets or sets the connection point on the start diagram item to which the connector is glued. This is a dependency property.
</para>
            </summary>
            <value>A zero-based index of the connection point on the start diagram item.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginItemPointIndexProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginItemProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.BeginPoint">
            <summary>
                <para>Gets or sets the connector's starting point within the diagram canvas. This is a dependency property.
</para>
            </summary>
            <value>The starting point of the connector.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.BeginPointProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanRotate">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanSnapToOtherItems">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.CanSnapToThisItem">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.ConnectionPoints">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Content">
            <summary>
                <para>Gets or sets the text displayed by the connector. This is a dependency property.
</para>
            </summary>
            <value>The text displayed by the connector.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.ContentBackground">
            <summary>
                <para>Gets or sets the brush used to paint the background of the text within the DiagramConnector. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> object used to paint the background of the text within the DiagramConnector.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.ContentBackgroundProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.ContentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndArrow">
            <summary>
                <para>Gets or sets the connector's end arrow style. This is a dependency property.
</para>
            </summary>
            <value>An object that specifies the end arrow style.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndArrowProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndArrowSize">
            <summary>
                <para>Gets or sets the connector's ending arrow size. This is a dependency property.
</para>
            </summary>
            <value>The ending arrow size.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndArrowSizeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndItem">
            <summary>
                <para>Gets or sets the end item for the connector. This is a dependency property.
</para>
            </summary>
            <value>The connector's end item.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndItemPointIndex">
            <summary>
                <para>Gets or sets the connection point on the end diagram item to which the connector is glued. This is a dependency property.
</para>
            </summary>
            <value>A zero-based index of the connection point on the end diagram item
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndItemPointIndexProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndItemProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.EndPoint">
            <summary>
                <para>Gets or sets the connector's end point on the diagram canvas. This is a dependency property.
</para>
            </summary>
            <value>The end point of the connector.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.EndPointProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Height">
            <summary>
                <para>Gets or sets the height of the connector.
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.MinHeight">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.MinWidth">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramConnector.OnApplyTemplate">
            <summary>
                <para>Called after the template is completely generated and attached to the visual tree.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Padding">
            <summary>
                <para>This member is not supported by the DiagramConnector class.
</para>
            </summary>
            <value> 
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Points">
            <summary>
                <para>Gets or sets a collection of turn points for the connector. This is a dependency property.
</para>
            </summary>
            <value>A collection of turn points. 
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.PointsProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Position">
            <summary>
                <para>Gets or sets the coordinates of the connector's upper left corner.
</para>
            </summary>
            <value>The coordinates of the connector's upper left corner.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.TextPosition">
            <summary>
                <para>Gets the position of the text displayed by the DiagramConnector. This is a dependency property.
</para>
            </summary>
            <value>The coordinates of the text block.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.TextPositionProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Type">
            <summary>
                <para>Gets or sets the connector's type. This is a dependency property.
</para>
            </summary>
            <value>The connector's type.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramConnector.TypeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramConnector.UpdateRoute">
            <summary>
                <para>Recalculates the diagram connector's route.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramConnector.Width">
            <summary>
                <para>Gets or sets the width of the connector.
</para>
            </summary>
            <value>A <see cref="T:System.Double"/> value.
</value>


        </member>
        <member name="T:DevExpress.Xpf.Diagram.DiagramShape">

            <summary>
                <para>Represents a diagram shape.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramShape.#ctor">
            <summary>
                <para>Initializes a new instance of the DiagramShape class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramShape.CanChangeParameter">
            <summary>
                <para> </para>
            </summary>
            <value> </value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramShape.CanChangeParameterProperty">
            <summary>
                <para> </para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramShape.Content">
            <summary>
                <para>Gets or sets the text displayed by the shape. This is a dependency property.
</para>
            </summary>
            <value>The text displayed by the shape.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramShape.ContentBackground">
            <summary>
                <para>Gets or sets the brush used to paint the background of the text within the DiagramShape. This is a dependency property.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Media.Brush"/> object used to paint the background of the text within the DiagramShape.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramShape.ContentBackgroundProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramShape.ContentProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="M:DevExpress.Xpf.Diagram.DiagramShape.OnApplyTemplate">
            <summary>
                <para>Called after the template is completely generated and attached to the visual tree.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramShape.Padding">
            <summary>
                <para>Gets or sets the amount of space between the item's borders and its contents.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Thickness"/> value that specifies the amount of space between the item's borders and its contents.
</value>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramShape.Parameters">
            <summary>
                <para>Specifies shape parameters. This is a dependency property.
</para>
            </summary>
            <value>A System.Windows.Media.DoubleCollection object that represents shape parameters.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramShape.ParametersProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
        <member name="P:DevExpress.Xpf.Diagram.DiagramShape.Shape">
            <summary>
                <para>Gets or sets the shape kind. This is a dependency property.
</para>
            </summary>
            <value>An object that specifies the shape kind.
</value>


        </member>
        <member name="F:DevExpress.Xpf.Diagram.DiagramShape.ShapeProperty">
            <summary>
                <para>Identifies the  dependency property.
</para>
            </summary>
            <returns> </returns>


        </member>
    </members>
</doc>
