#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Login_TTVL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TTVL_Login")]
	public partial class MasterDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLogin(Login instance);
    partial void UpdateLogin(Login instance);
    partial void DeleteLogin(Login instance);
    #endregion
		
		public MasterDataContext() : 
				base(global::Login_TTVL.Properties.Settings.Default.TTVL_LoginConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MasterDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MasterDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MasterDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MasterDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Login> Logins
		{
			get
			{
				return this.GetTable<Login>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login")]
	public partial class Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RowID;
		
		private string _TenMay;
		
		private string _KeyPC;
		
		private string _Lock;
		
		private System.Nullable<System.DateTime> _DateBatDau;
		
		private System.Nullable<System.DateTime> _DateKetThuc;
		
		private string _GhiChu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRowIDChanging(int value);
    partial void OnRowIDChanged();
    partial void OnTenMayChanging(string value);
    partial void OnTenMayChanged();
    partial void OnKeyPCChanging(string value);
    partial void OnKeyPCChanged();
    partial void OnLockChanging(string value);
    partial void OnLockChanged();
    partial void OnDateBatDauChanging(System.Nullable<System.DateTime> value);
    partial void OnDateBatDauChanged();
    partial void OnDateKetThucChanging(System.Nullable<System.DateTime> value);
    partial void OnDateKetThucChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public Login()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RowID
		{
			get
			{
				return this._RowID;
			}
			set
			{
				if ((this._RowID != value))
				{
					this.OnRowIDChanging(value);
					this.SendPropertyChanging();
					this._RowID = value;
					this.SendPropertyChanged("RowID");
					this.OnRowIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMay", DbType="NVarChar(50)")]
		public string TenMay
		{
			get
			{
				return this._TenMay;
			}
			set
			{
				if ((this._TenMay != value))
				{
					this.OnTenMayChanging(value);
					this.SendPropertyChanging();
					this._TenMay = value;
					this.SendPropertyChanged("TenMay");
					this.OnTenMayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyPC", DbType="NVarChar(50)")]
		public string KeyPC
		{
			get
			{
				return this._KeyPC;
			}
			set
			{
				if ((this._KeyPC != value))
				{
					this.OnKeyPCChanging(value);
					this.SendPropertyChanging();
					this._KeyPC = value;
					this.SendPropertyChanged("KeyPC");
					this.OnKeyPCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lock", DbType="NChar(10)")]
		public string Lock
		{
			get
			{
				return this._Lock;
			}
			set
			{
				if ((this._Lock != value))
				{
					this.OnLockChanging(value);
					this.SendPropertyChanging();
					this._Lock = value;
					this.SendPropertyChanged("Lock");
					this.OnLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBatDau", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateBatDau
		{
			get
			{
				return this._DateBatDau;
			}
			set
			{
				if ((this._DateBatDau != value))
				{
					this.OnDateBatDauChanging(value);
					this.SendPropertyChanging();
					this._DateBatDau = value;
					this.SendPropertyChanged("DateBatDau");
					this.OnDateBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateKetThuc", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateKetThuc
		{
			get
			{
				return this._DateKetThuc;
			}
			set
			{
				if ((this._DateKetThuc != value))
				{
					this.OnDateKetThucChanging(value);
					this.SendPropertyChanging();
					this._DateKetThuc = value;
					this.SendPropertyChanged("DateKetThuc");
					this.OnDateKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
